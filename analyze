# Load necessary libraries
library(tidyverse)
library(ggplot2)
library(lubridate)
library(readr)
# Import datasets
bike_2022_07 <- read.csv("/kaggle/input/cyclist-jul2022-jun2023/202207-divvy-tripdata.csv")
bike_2022_08 <- read.csv("/kaggle/input/cyclist-jul2022-jun2023/202208-divvy-tripdata.csv")
bike_2022_09 <- read.csv("/kaggle/input/cyclist-jul2022-jun2023/202209-divvy-publictripdata.csv")
bike_2022_10 <- read.csv("/kaggle/input/cyclist-jul2022-jun2023/202210-divvy-tripdata.csv")
bike_2022_11 <- read.csv("/kaggle/input/cyclist-jul2022-jun2023/202211-divvy-tripdata.csv")
bike_2022_12 <- read.csv("/kaggle/input/cyclist-jul2022-jun2023/202212-divvy-tripdata.csv")
bike_2023_01 <- read.csv("/kaggle/input/cyclist-jul2022-jun2023/202301-divvy-tripdata.csv")
bike_2023_02 <- read.csv("/kaggle/input/cyclist-jul2022-jun2023/202302-divvy-tripdata.csv")
bike_2023_03 <- read.csv("/kaggle/input/cyclist-jul2022-jun2023/202303-divvy-tripdata.csv")
bike_2023_04 <- read.csv("/kaggle/input/cyclist-jul2022-jun2023/202304-divvy-tripdata.csv")
bike_2023_05 <- read.csv("/kaggle/input/cyclist-jul2022-jun2023/202305-divvy-tripdata.csv")
bike_2023_06 <- read.csv("/kaggle/input/cyclist-jul2022-jun2023/202306-divvy-tripdata.csv")
# Check column names
colnames(bike_2022_07)
colnames(bike_2022_08)
colnames(bike_2022_09)
colnames(bike_2022_10)
colnames(bike_2022_11)
colnames(bike_2022_12)
colnames(bike_2023_01)
colnames(bike_2023_02)
colnames(bike_2023_03)
colnames(bike_2023_04)
colnames(bike_2023_05)
colnames(bike_2023_06)
# All datasets have matching column names, therefore they are suitable for data merging.
	# Merge datasets
total_bike <- rbind(bike_2022_07, bike_2022_08, bike_2022_09, bike_2022_10, bike_2022_11, bike_2022_12, bike_2023_01, bike_2023_02, bike_2023_03, bike_2023_04, bike_2023_05, bike_2023_06)
	# Inspect the combined dataset
View(total_bike)
str(total_bike)
colnames(total_bike)
	# Create additional columns for date and time
total_bike$date <- as.Date(total_bike$started_at)
total_bike$month <- format(as.Date(total_bike$date), "%m")
total_bike$day <- format(as.Date(total_bike$date), "%d")
total_bike$year <- format(as.Date(total_bike$date), "%Y")
total_bike$day_of_week <- format(as.Date(total_bike$date), "%A")
	# Calculate the ride length (in seconds) and convert the data to numeric for further analysis
total_bike$ride_length <- difftime(total_bike$ended_at, total_bike$started_at)
total_bike$ride_length <- as.numeric(as.character(total_bike$ride_length))
	# Create a new data frame where rows with ride lengths either negative or equal 0
total_bike_v2 <- total_bike[!(total_bike$ride_length <=0),]
	
	# Descriptive Analysis
	# Overview of ride lenght (mean, median, max, min)
summary(total_bike_v2$ride_length)
	# Compare total ride time between casual riders and Cyclistic members
aggregate(total_bike_v2$ride_length ~ total_bike_v2$member_casual, FUN = mean)
	# Compare casual riders and Cyclistic members average ride length throughout the week
aggregate(total_bike_v2$ride_length ~ total_bike_v2$member_casual + total_bike_v2$day_of_week, FUN = mean)

	# Visualize
	# Visualize the average ride duration through the week between the two customer types
total_bike_v2 %>%
  mutate(weekday = wday(started_at, label = TRUE)) %>%
  group_by(member_casual, weekday) %>% # Group by customer type and weekday
  summarise(number_of_rides = n(), average_duration = mean(ride_length)) %>% # Count the number of rides and average duration
  arrange(member_casual,weekday) %>% # Sorting
  ggplot(aes(x = weekday, y =average_duration, fill = member_casual)) + geom_col(position = "dodge") + labs(x = "Days of the week", y = "Average ride duration", title = "Average ride duration of customers through out the week", fill = "Customer type")
	# Visualize the average ride duration through the 12 months between customer types
total_bike_v2 %>%
  group_by(member_casual, month) %>%
  summarise(number_of_rides = n(), average_duration = mean(ride_length)) %>%
  arrange(member_casual, month) %>%
  ggplot(aes(x = month, y = number_of_rides, fill = member_casual)) + geom_col(position = "dodge") + labs(x = "", y = "Average ride duration", fill = "Customer type", title = "Average ride duration throughout the year") + scale_y_continuous(labels = scales::comma)
	# Visualize the popular bike type among customers
total_bike_v2 %>%
  group_by(member_casual, rideable_type) %>%
  summarise(number_of_ride = n(), average_duration = sum(ride_length)) %>%
  arrange(member_casual, rideable_type) %>%
  ggplot(aes(x = rideable_type, y = number_of_ride, fill = member_casual)) + geom_col(position = "dodge") +labs( x = "Bike types", y = "Ride duration", title = "Customer's bike usage among different bike types") + scale_y_continuous(labels = scales::comma)
